plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.graalvm.buildtools.native' version '0.10.6'
	id "org.sonarqube" version '6.2.0.5505'
	id "com.gorylenko.gradle-git-properties" version '2.5.0'
	id 'jacoco'
	id 'com.adarshr.test-logger' version '4.0.0'
}

group = 'hu.gyengus'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	// https://mvnrepository.com/artifact/io.github.java-native/jssc
	implementation 'io.github.java-native:jssc:2.10.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
}

tasks.named('test') {
	useJUnitPlatform()
}

project.tasks["build"].dependsOn "generateGitProperties"
project.tasks["sonar"].dependsOn "jacocoTestCoverageVerification"

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test
    reports {
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
	dependsOn jacocoTestReport
}

testlogger {
	theme 'mocha'
}

sonar {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectKey", "gyengus_thermometer"
        property "sonar.organization", "gyengus-github"
        property "sonar.sources", "src/main"
        property "sonar.tests", "src/test"
        property "sonar.junit.reportPaths", "build/test-results/test"
    }
}

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

gitProperties {
	dotGitDirectory = file('../.git')
    keys = ['git.build.version', 'git.branch', 'git.commit.id', 'git.commit.id.abbrev', 'git.commit.time', 'git.commit.message.short', 'git.tags']
}
